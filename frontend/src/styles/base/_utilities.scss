// =============================================================================
// 原子化工具类系统
// =============================================================================

@use './variables' as *;
@use './functions' as *;
@use './mixins' as *;

// =============================================================================
// 布局工具类
// =============================================================================

// Display
.d-block { display: block; }
.d-inline { display: inline; }
.d-inline-block { display: inline-block; }
.d-flex { display: flex; }
.d-inline-flex { display: inline-flex; }
.d-grid { display: grid; }
.d-none { display: none; }

// Flexbox
.flex-row { flex-direction: row; }
.flex-col { flex-direction: column; }
.flex-wrap { flex-wrap: wrap; }
.flex-nowrap { flex-wrap: nowrap; }
.flex-1 { flex: 1 1 0%; }
.flex-auto { flex: 1 1 auto; }
.flex-initial { flex: 0 1 auto; }
.flex-none { flex: none; }

// Justify Content
.justify-start { justify-content: flex-start; }
.justify-end { justify-content: flex-end; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.justify-evenly { justify-content: space-evenly; }

// Align Items
.items-start { align-items: flex-start; }
.items-end { align-items: flex-end; }
.items-center { align-items: center; }
.items-baseline { align-items: baseline; }
.items-stretch { align-items: stretch; }

// Align Self
.self-start { align-self: flex-start; }
.self-end { align-self: flex-end; }
.self-center { align-self: center; }
.self-baseline { align-self: baseline; }
.self-stretch { align-self: stretch; }

// Grid
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }

// Position
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }
.static { position: static; }

// =============================================================================
// 间距工具类
// =============================================================================

// Margin
@each $size, $value in $spacing {
  .m-#{$size} { margin: $value; }
  .mt-#{$size} { margin-top: $value; }
  .mr-#{$size} { margin-right: $value; }
  .mb-#{$size} { margin-bottom: $value; }
  .ml-#{$size} { margin-left: $value; }
  .mx-#{$size} { 
    margin-left: $value; 
    margin-right: $value; 
  }
  .my-#{$size} { 
    margin-top: $value; 
    margin-bottom: $value; 
  }
}

// Padding
@each $size, $value in $spacing {
  .p-#{$size} { padding: $value; }
  .pt-#{$size} { padding-top: $value; }
  .pr-#{$size} { padding-right: $value; }
  .pb-#{$size} { padding-bottom: $value; }
  .pl-#{$size} { padding-left: $value; }
  .px-#{$size} { 
    padding-left: $value; 
    padding-right: $value; 
  }
  .py-#{$size} { 
    padding-top: $value; 
    padding-bottom: $value; 
  }
}

// Gap
@each $size, $value in $spacing {
  .gap-#{$size} { gap: $value; }
  .gap-x-#{$size} { column-gap: $value; }
  .gap-y-#{$size} { row-gap: $value; }
}

// =============================================================================
// 尺寸工具类
// =============================================================================

// Width
.w-full { width: 100%; }
.w-auto { width: auto; }
.w-fit { width: fit-content; }
.w-max { width: max-content; }
.w-min { width: min-content; }

// Height
.h-full { height: 100%; }
.h-auto { height: auto; }
.h-fit { height: fit-content; }
.h-max { height: max-content; }
.h-min { height: min-content; }

// Min/Max Width/Height
.min-w-0 { min-width: 0px; }
.min-w-full { min-width: 100%; }
.max-w-full { max-width: 100%; }
.min-h-0 { min-height: 0px; }
.min-h-full { min-height: 100%; }
.max-h-full { max-height: 100%; }

// =============================================================================
// 颜色工具类
// =============================================================================

// Background Colors
.bg-transparent { background-color: transparent; }
.bg-current { background-color: currentColor; }
.bg-primary { background-color: var(--primary); }
.bg-secondary { background-color: var(--secondary); }
.bg-accent { background-color: var(--accent); }
.bg-success { background-color: var(--success); }
.bg-warning { background-color: var(--warning); }
.bg-error { background-color: var(--error); }
.bg-info { background-color: var(--info); }
.bg-background { background-color: var(--background); }
.bg-foreground { background-color: var(--foreground); }
.bg-card { background-color: var(--card); }
.bg-muted { background-color: var(--muted); }

// Text Colors
.text-primary { color: var(--primary); }
.text-secondary { color: var(--secondary); }
.text-accent { color: var(--accent); }
.text-success { color: var(--success); }
.text-warning { color: var(--warning); }
.text-error { color: var(--error); }
.text-info { color: var(--info); }
.text-background { color: var(--background); }
.text-foreground { color: var(--foreground); }
.text-muted { color: var(--muted-foreground); }

// Border Colors
.border-primary { border-color: var(--primary); }
.border-secondary { border-color: var(--secondary); }
.border-accent { border-color: var(--accent); }
.border-success { border-color: var(--success); }
.border-warning { border-color: var(--warning); }
.border-error { border-color: var(--error); }
.border-info { border-color: var(--info); }
.border-border { border-color: var(--border); }
.border-transparent { border-color: transparent; }

// =============================================================================
// 边框工具类
// =============================================================================

// Border Width
.border-0 { border-width: 0px; }
.border { border-width: 1px; }
.border-2 { border-width: 2px; }
.border-4 { border-width: 4px; }
.border-8 { border-width: 8px; }

// Border Radius
@each $size, $value in $radius {
  .rounded-#{$size} { border-radius: $value; }
  .rounded-t-#{$size} { 
    border-top-left-radius: $value; 
    border-top-right-radius: $value; 
  }
  .rounded-r-#{$size} { 
    border-top-right-radius: $value; 
    border-bottom-right-radius: $value; 
  }
  .rounded-b-#{$size} { 
    border-bottom-right-radius: $value; 
    border-bottom-left-radius: $value; 
  }
  .rounded-l-#{$size} { 
    border-top-left-radius: $value; 
    border-bottom-left-radius: $value; 
  }
}

// =============================================================================
// 字体工具类
// =============================================================================

// Font Size
@each $size, $value in map-get($fonts, size) {
  .text-#{$size} { font-size: $value; }
}

// Font Weight
@each $weight, $value in map-get($fonts, weight) {
  .font-#{$weight} { font-weight: $value; }
}

// Line Height
@each $height, $value in map-get($fonts, lineHeight) {
  .leading-#{$height} { line-height: $value; }
}

// Text Alignment
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }

// Text Decoration
.underline { text-decoration: underline; }
.no-underline { text-decoration: none; }
.line-through { text-decoration: line-through; }

// =============================================================================
// 阴影工具类
// =============================================================================

@each $shadow, $value in $shadows {
  .shadow-#{$shadow} { 
    @if type-of($value) == 'map' {
      box-shadow: map-get($value, light);
    } @else {
      box-shadow: $value;
    }
  }
}

// =============================================================================
// 交互工具类
// =============================================================================

// Cursor
.cursor-auto { cursor: auto; }
.cursor-default { cursor: default; }
.cursor-pointer { cursor: pointer; }
.cursor-wait { cursor: wait; }
.cursor-text { cursor: text; }
.cursor-move { cursor: move; }
.cursor-help { cursor: help; }
.cursor-not-allowed { cursor: not-allowed; }

// User Select
.select-none { user-select: none; }
.select-text { user-select: text; }
.select-all { user-select: all; }
.select-auto { user-select: auto; }

// Pointer Events
.pointer-events-none { pointer-events: none; }
.pointer-events-auto { pointer-events: auto; }

// =============================================================================
// 响应式工具类
// =============================================================================

@each $breakpoint, $value in $breakpoints {
  @include respond-to($breakpoint) {
    // Display
    .#{$breakpoint}\:d-block { display: block; }
    .#{$breakpoint}\:d-inline { display: inline; }
    .#{$breakpoint}\:d-inline-block { display: inline-block; }
    .#{$breakpoint}\:d-flex { display: flex; }
    .#{$breakpoint}\:d-inline-flex { display: inline-flex; }
    .#{$breakpoint}\:d-grid { display: grid; }
    .#{$breakpoint}\:d-none { display: none; }
    
    // Flex Direction
    .#{$breakpoint}\:flex-row { flex-direction: row; }
    .#{$breakpoint}\:flex-col { flex-direction: column; }
    
    // Justify Content
    .#{$breakpoint}\:justify-start { justify-content: flex-start; }
    .#{$breakpoint}\:justify-end { justify-content: flex-end; }
    .#{$breakpoint}\:justify-center { justify-content: center; }
    .#{$breakpoint}\:justify-between { justify-content: space-between; }
    
    // Align Items
    .#{$breakpoint}\:items-start { align-items: flex-start; }
    .#{$breakpoint}\:items-end { align-items: flex-end; }
    .#{$breakpoint}\:items-center { align-items: center; }
    .#{$breakpoint}\:items-stretch { align-items: stretch; }
    
    // Text Alignment
    .#{$breakpoint}\:text-left { text-align: left; }
    .#{$breakpoint}\:text-center { text-align: center; }
    .#{$breakpoint}\:text-right { text-align: right; }
  }
}

// =============================================================================
// 状态工具类
// =============================================================================

// Hover States
.hover\:bg-primary:hover { background-color: var(--primary); }
.hover\:bg-secondary:hover { background-color: var(--secondary); }
.hover\:bg-accent:hover { background-color: var(--accent); }
.hover\:text-primary:hover { color: var(--primary); }
.hover\:text-secondary:hover { color: var(--secondary); }
.hover\:text-accent:hover { color: var(--accent); }
.hover\:border-primary:hover { border-color: var(--primary); }
.hover\:border-secondary:hover { border-color: var(--secondary); }
.hover\:border-accent:hover { border-color: var(--accent); }

// Focus States
.focus\:bg-primary:focus { background-color: var(--primary); }
.focus\:bg-secondary:focus { background-color: var(--secondary); }
.focus\:bg-accent:focus { background-color: var(--accent); }
.focus\:text-primary:focus { color: var(--primary); }
.focus\:text-secondary:focus { color: var(--secondary); }
.focus\:text-accent:focus { color: var(--accent); }
.focus\:border-primary:focus { border-color: var(--primary); }
.focus\:border-secondary:focus { border-color: var(--secondary); }
.focus\:border-accent:focus { border-color: var(--accent); }

// Disabled States
.disabled\:opacity-50:disabled { opacity: 0.5; }
.disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }
.disabled\:pointer-events-none:disabled { pointer-events: none; }
