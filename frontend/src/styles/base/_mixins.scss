// ============================================================================
// 基础 SCSS Mixins（无业务语义）
// ============================================================================

@use './variables' as *;
@use './functions' as *;

// 响应式断点（最小宽度）
@mixin respond-to($breakpoint) {
  $value: breakpoint($breakpoint);
  @if $value {
    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found";
  }
}

// 响应式断点（最大宽度）
@mixin respond-to-max($breakpoint) {
  $value: breakpoint($breakpoint);
  @if $value {
    @media (max-width: calc($value - 1px)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found";
  }
}

// 焦点可视指示
@mixin focus-ring($color: var(--ring), $offset: 2px) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

// 文本截断
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本截断
@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 滚动条样式
@mixin scrollbar($width: 8px, $track-color: var(--muted), $thumb-color: var(--border)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: radius(sm);
  }
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: radius(sm);
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// 动画过渡
@mixin animate($property, $duration: normal, $easing: easeInOut) {
  transition: $property animation(duration, $duration) animation(easing, $easing);
}

// 渐变背景
@mixin gradient($direction: to right, $start-color, $end-color) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 阴影
@mixin shadow($shadow-name: md, $theme: 'light') {
  box-shadow: shadow($shadow-name, $theme);
}

// 边框
@mixin border($sides: all, $color: var(--border), $width: 1px, $style: solid) {
  @if $sides == all {
    border: $width $style $color;
  } @else {
    @each $side in $sides {
      border-#{$side}: $width $style $color;
    }
  }
}

// 圆角
@mixin rounded($radius: md) {
  border-radius: radius($radius);
}

// 定位
@mixin position($type, $top: null, $right: null, $bottom: null, $left: null) {
  position: $type;
  @if $top    { top: $top; }
  @if $right  { right: $right; }
  @if $bottom { bottom: $bottom; }
  @if $left   { left: $left; }
}

// 弹性布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 网格布局
@mixin grid($columns: 1, $gap: spacing(md)) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// 隐藏元素
@mixin hide($breakpoint: null) {
  @if $breakpoint {
    @include respond-to($breakpoint) {
      display: none;
    }
  } @else {
    display: none;
  }
}

// 显示元素
@mixin show($display: block, $breakpoint: null) {
  @if $breakpoint {
    @include respond-to($breakpoint) {
      display: $display;
    }
  } @else {
    display: $display;
  }
}
