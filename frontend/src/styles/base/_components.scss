// =============================================================================
// 可复用组件混入系统
// =============================================================================

@use './variables' as *;
@use './functions' as *;
@use './mixins' as *;

// =============================================================================
// 按钮组件混入
// =============================================================================

// 按钮基础混入
@mixin button-base {
  @include flex(row, center, center);
  border-radius: radius(md);
  font-family: font(family, primary);
  font-weight: font(weight, medium);
  cursor: pointer;
  @include animate(all, fast, easeInOut);
  border: 1px solid transparent;
  text-decoration: none;
  user-select: none;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  @include focus-ring;
}

// 按钮变体混入
@mixin button-variant($variant) {
  @if $variant == 'default' {
    background-color: var(--primary);
    color: var(--primary-foreground);
    border-color: var(--primary);
    
    &:hover:not(:disabled) {
      background-color: var(--primary);
      opacity: 0.9;
    }
  } @else if $variant == 'destructive' {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
    border-color: var(--destructive);
    
    &:hover:not(:disabled) {
      background-color: var(--destructive);
      opacity: 0.9;
    }
  } @else if $variant == 'outline' {
    background-color: transparent;
    color: var(--foreground);
    border-color: var(--border);
    
    &:hover:not(:disabled) {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  } @else if $variant == 'secondary' {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    border-color: var(--secondary);
    
    &:hover:not(:disabled) {
      background-color: var(--secondary);
      opacity: 0.8;
    }
  } @else if $variant == 'ghost' {
    background-color: transparent;
    color: var(--foreground);
    border-color: transparent;
    
    &:hover:not(:disabled) {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  } @else if $variant == 'link' {
    background-color: transparent;
    color: var(--primary);
    border-color: transparent;
    text-decoration: underline;
    
    &:hover:not(:disabled) {
      color: var(--primary);
      opacity: 0.8;
    }
  }
}

// 按钮尺寸混入
@mixin button-size($size) {
  @if $size == 'default' {
    padding: spacing(sm) spacing(md);
    font-size: font(size, sm);
    line-height: font(lineHeight, tight);
  } @else if $size == 'sm' {
    padding: spacing(xs) spacing(sm);
    font-size: font(size, xs);
    line-height: font(lineHeight, tight);
  } @else if $size == 'lg' {
    padding: spacing(md) spacing(lg);
    font-size: font(size, base);
    line-height: font(lineHeight, normal);
  } @else if $size == 'icon' {
    padding: spacing(sm);
    font-size: font(size, sm);
    line-height: font(lineHeight, tight);
    width: 2.5rem;
    height: 2.5rem;
  }
}

// =============================================================================
// 输入框组件混入
// =============================================================================

// 输入框基础混入
@mixin input-base {
  display: block;
  width: 100%;
  padding: spacing(sm) spacing(md);
  font-family: font(family, primary);
  font-size: font(size, sm);
  line-height: font(lineHeight, normal);
  color: var(--foreground);
  background-color: var(--background);
  border: 1px solid var(--border);
  border-radius: radius(md);
  @include animate(border-color, fast, easeInOut);
  
  &::placeholder {
    color: var(--muted-foreground);
  }
  
  @include focus-ring;
  
  &:focus {
    border-color: var(--ring);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// 输入框状态混入
@mixin input-state($state) {
  @if $state == 'error' {
    border-color: var(--destructive);
    
    &:focus {
      border-color: var(--destructive);
    }
  } @else if $state == 'success' {
    border-color: var(--success);
    
    &:focus {
      border-color: var(--success);
    }
  }
}

// =============================================================================
// 面板组件混入
// =============================================================================

// 面板基础混入
@mixin panel-base($variant: 'default') {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: radius(lg);
  @include shadow(md);
  
  @if $variant == 'header' {
    background-color: var(--muted);
    border-bottom: 1px solid var(--border);
    border-radius: radius(lg) radius(lg) 0 0;
    padding: spacing(sm) spacing(md);
  } @else if $variant == 'content' {
    padding: spacing(md);
  } @else if $variant == 'footer' {
    background-color: var(--muted);
    border-top: 1px solid var(--border);
    border-radius: 0 0 radius(lg) radius(lg);
    padding: spacing(sm) spacing(md);
  } @else {
    padding: spacing(md);
  }
}

// =============================================================================
// 工具栏组件混入
// =============================================================================

// 工具栏基础混入
@mixin toolbar-base {
  @include flex(row, flex-start, center);
  gap: spacing(xs);
  padding: spacing(sm);
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: radius(md);
  @include shadow(sm);
}

// 工具栏项目混入
@mixin toolbar-item {
  @include flex(row, center, center);
  padding: spacing(xs);
  border-radius: radius(sm);
  @include animate(all, fast, easeInOut);
  
  &:hover {
    background-color: var(--accent);
  }
  
  &:active {
    background-color: var(--accent);
    opacity: 0.8;
  }
}

// =============================================================================
// 菜单组件混入
// =============================================================================

// 菜单基础混入
@mixin menu-base {
  background-color: var(--popover);
  border: 1px solid var(--border);
  border-radius: radius(md);
  padding: spacing(xs) 0;
  @include shadow(lg);
  min-width: 8rem;
}

// 菜单项目混入
@mixin menu-item {
  display: block;
  width: 100%;
  padding: spacing(xs) spacing(md);
  color: var(--popover-foreground);
  text-decoration: none;
  @include animate(all, fast, easeInOut);
  
  &:hover {
    background-color: var(--accent);
    color: var(--accent-foreground);
  }
  
  &:active {
    background-color: var(--accent);
    opacity: 0.8;
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// =============================================================================
// 卡片组件混入
// =============================================================================

// 卡片基础混入
@mixin card-base {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: radius(lg);
  @include shadow(md);
  overflow: hidden;
}

// 卡片头部混入
@mixin card-header {
  padding: spacing(md);
  border-bottom: 1px solid var(--border);
  background-color: var(--card);
}

// 卡片内容混入
@mixin card-content {
  padding: spacing(md);
}

// 卡片底部混入
@mixin card-footer {
  padding: spacing(md);
  border-top: 1px solid var(--border);
  background-color: var(--muted);
}

// =============================================================================
// 徽章组件混入
// =============================================================================

// 徽章基础混入
@mixin badge-base {
  display: inline-flex;
  align-items: center;
  padding: spacing(xs) spacing(sm);
  font-size: font(size, xs);
  font-weight: font(weight, medium);
  border-radius: radius(full);
  white-space: nowrap;
}

// 徽章变体混入
@mixin badge-variant($variant) {
  @if $variant == 'default' {
    background-color: var(--primary);
    color: var(--primary-foreground);
  } @else if $variant == 'secondary' {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
  } @else if $variant == 'destructive' {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
  } @else if $variant == 'outline' {
    background-color: transparent;
    color: var(--foreground);
    border: 1px solid var(--border);
  }
}

// =============================================================================
// 加载状态混入
// =============================================================================

// 加载动画混入
@mixin loading-spinner($size: 1rem, $color: currentColor) {
  width: $size;
  height: $size;
  border: 2px solid transparent;
  border-top-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// 骨架屏混入
@mixin skeleton($width: 100%, $height: 1rem) {
  width: $width;
  height: $height;
  background: linear-gradient(90deg, var(--muted) 25%, var(--border) 50%, var(--muted) 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
  border-radius: radius(sm);
}

// =============================================================================
// 动画定义
// =============================================================================

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}
